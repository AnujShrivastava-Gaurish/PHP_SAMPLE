<?xml version="1.0" encoding="UTF-8"?>
<ruleset name="PHP_BASIC">
    <description>My Project Coding Standard</description>

    <rule ref="Generic.Classes.DuplicateClassName"/>
	<rule ref="Generic.CodeAnalysis.EmptyStatement"/>
	<rule ref="Generic.CodeAnalysis.UnconditionalIfStatement"/>
	<rule ref="Generic.CodeAnalysis.UnusedFunctionParameter"/>
	<rule ref="Generic.CodeAnalysis.UselessOverridingMethod"/>
	<rule ref="Generic.Commenting.Todo"/>
	<rule ref="Generic.Commenting.Fixme"/>
	<rule ref="Generic.ControlStructures.InlineControlStructure">
		<properties>
			<property name="error" value="false"/>
		</properties>
	</rule>
	<rule ref="Generic.Debug.ClosureLinter"/>
	<rule ref="Generic.Debug.JSHint"/>
	<rule ref="Generic.Debug.CSSLint"/>
	<rule ref="Generic.Formatting.DisallowMultipleStatements"/>
	<rule ref="Generic.Formatting.MultipleStatementAlignment">
		<properties>
			<property name="error" value="false"/>
		</properties>
	</rule>
	<rule ref="Generic.Formatting.SpaceAfterCast"/>
	<rule ref="Generic.Functions.OpeningFunctionBraceKernighanRitchie"/>
	<rule ref="Generic.Metrics.CyclomaticComplexity"/>
	<rule ref="Generic.Metrics.NestingLevel"/>
	<rule ref="Generic.NamingConventions.ConstructorName">
		<properties>
			<property name="error" value="false"/>
		</properties>
	</rule>
	<rule ref="Generic.NamingConventions.UpperCaseConstantName"/>
	<rule ref="Generic.NamingConventions.CamelCapsFunctionName"/>
	<rule ref="Generic.PHP.DeprecatedFunctions"/>
	<rule ref="Generic.PHP.UpperCaseConstant"/>
	<rule ref="Generic.WhiteSpace.ScopeIndent"/>
	<rule ref="Generic.WhiteSpace.DisallowSpaceIndent"/>
	<rule ref="PEAR.Classes.ClassDeclaration"/>
	<rule ref="PEAR.Commenting.ClassComment"/>
	<rule ref="PEAR.Commenting.FileComment"/>
	<rule ref="PEAR.Commenting.FunctionComment"/>
	<rule ref="PEAR.Commenting.InlineComment"/>
	<rule ref="PEAR.ControlStructures.MultiLineCondition"/>
	<rule ref="PEAR.Files.IncludingFile"/>
	<rule ref="PEAR.Formatting.MultiLineAssignment"/>
	<rule ref="PEAR.Functions.FunctionCallSignature"/>
	<rule ref="PEAR.Functions.FunctionDeclaration"/>
	<rule ref="PEAR.Functions.ValidDefaultValue"/>
	<rule ref="PEAR.NamingConventions.ValidClassName"/>
	<rule ref="PEAR.NamingConventions.ValidFunctionName"/>
	<rule ref="PEAR.NamingConventions.ValidVariableName"/>
	<rule ref="PEAR.WhiteSpace.ObjectOperatorIndent"/>
	<rule ref="PEAR.WhiteSpace.ScopeClosingBrace"/>
	<rule ref="PEAR.WhiteSpace.ScopeIndent"/>
	<rule ref="Squiz.PHP.DisallowComparisonAssignment"/>
	<rule ref="Squiz.PHP.DisallowInlineIf"/>
	<rule ref="Squiz.PHP.DisallowObEndFlush"/>
	<rule ref="Squiz.PHP.DisallowSizeFunctionsInLoops"/>
	<rule ref="Squiz.PHP.DiscouragedFunctions"/>
	<rule ref="Squiz.PHP.EmbeddedPhp"/>
	<rule ref="Squiz.PHP.Heredoc"/>
	<rule ref="Squiz.PHP.InnerFunctions"/>
	<rule ref="Squiz.PHP.NonExecutableCode"/>
	<rule ref="Squiz.WhiteSpace.FunctionSpacing"/>
	<rule ref="Squiz.WhiteSpace.LanguageConstructSpacing"/>
	<rule ref="Squiz.WhiteSpace.LogicalOperatorSpacing"/>
	<rule ref="Squiz.WhiteSpace.OperatorSpacing"/>
	<rule ref="Squiz.WhiteSpace.PropertyLabelSpacing"/>
	<rule ref="Squiz.WhiteSpace.ScopeClosingBrace"/>
	<rule ref="Squiz.WhiteSpace.SemicolonSpacing"/>
	<rule ref="Zend.Files.ClosingTag"/>
	<rule ref="Zend.NamingConventions.ValidVariableName"/>
</ruleset>